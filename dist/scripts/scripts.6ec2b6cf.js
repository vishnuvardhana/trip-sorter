"use strict";angular.module("travelFinderApp",["vAccordion","ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ngTouch","ngMaterial","angular-loading-bar","angAccordion"]).config(["cfpLoadingBarProvider",function(a){a.includeSpinner=!1}]).config(["$mdThemingProvider",function(a){a.theme("default").primaryPalette("pink",{"default":"500","hue-1":"700","hue-2":"800"})}]).constant("API_URL","response.json").constant("underscore",window._).constant("moment",window.moment).config(["$routeProvider",function(a){a.when("/",{templateUrl:"views/main.html",controller:"MainCtrl",controllerAs:"main"}).otherwise({redirectTo:"/"})}]),angular.module("travelFinderApp").controller("MainCtrl",["$scope","fetchDataService","underscore","$timeout","searchValidation","tripSorterFactory","$mdDialog",function(a,b,c,d,e,f,g){function h(){i().then(function(b){var d=b.data.deals;a.data.departureCities=f.sortArray(c.uniq(c.collect(d,"departure"))),a.data.arrivalCities=f.sortArray(c.uniq(c.collect(d,"arrival")))})}a.underscore=c,a.data={},a.userEvents={},a.data.departureCities=[],a.data.arrivalCities=[],a.data.selectedDeparture="",a.data.selectedArrival="",a.data.sortBy="1",a.data.recommendedResults={},a.data.considerDiscount=!0,a.userEvents.showValidationErrors=function(a){g.show(g.alert().parent(angular.element(document.querySelector("body"))).clickOutsideToClose(!0).title("Invalid Search").textContent(a).ok("Got it!"))};var i=function(){return b.getRemoteData()};h(),a.userEvents.swapAndSearch=function(){var b=a.data.selectedArrival;a.data.selectedArrival=a.data.selectedDeparture,a.data.selectedDeparture=b,a.userEvents.searchDeals()},a.userEvents.resetSearch=function(b){b&&(a.data.selectedDeparture="",a.data.selectedArrival="",a.data.considerDiscount=!0),a.data.recommendedResults={}},a.userEvents.searchDeals=function(){return a.data.selectedDeparture&&a.data.selectedArrival?e.isAValidSearch(a.data.selectedDeparture,a.data.selectedArrival)?void a.userEvents.showValidationErrors("Departure and Arrival can't be same "):void i().then(function(b){a.userEvents.resetSearch(!1);var c=b.data.deals,d=b.data.currency,e={},g=f.isACachedSearch(a.data.selectedDeparture,a.data.selectedArrival,a.data.considerDiscount);switch(e=g?f.returnCachedSearch():f.createGraphAndGetDeals(c,a.data.departureCities,a.data.arrivalCities,a.data.selectedDeparture,a.data.selectedArrival,a.data.considerDiscount),a.data.recommendedResults.currency=d,a.data.recommendedResults.totalPossiblePath=e.totalPossiblePath,a.data.sortBy){case"1":a.data.recommendedResults.deals=e.cheapest;break;case"2":a.data.recommendedResults.deals=e.fastest;break;case"3":a.data.recommendedResults.deals=e.allTrips}}):void a.userEvents.showValidationErrors("Select a valid Departure and Arrival")}}]),angular.module("travelFinderApp").factory("fetchDataService",["$http","API_URL",function(a,b){var c=function(){return a({url:b,method:"get"})};return{getRemoteData:c}}]),angular.module("travelFinderApp").factory("searchValidation",["underscore",function(a){var b=function(a,b){return a===b};return{isAValidSearch:b}}]).factory("tripSorterFactory",["underscore",function(a){function b(){this.vertices=[],this.edges=[],this.data=[],this.numberOfEdges=0}var c=a,d=[],e=[],f=[],g={departure:"",arrival:"",isDiscountedPrice:!0},h={cheapest:{},fastest:{},allTrips:{}};b.prototype.addVertex=function(a,b){this.vertices.push(a),this.edges[a]=[],this.data[a]=b},b.prototype.addEdge=function(a,b){this.edges[a]||(this.edges[a]=[]),this.edges[b]||(this.edges[b]=[]),-1===this.edges[a].indexOf(b)&&this.edges[a].push(b),-1===this.edges[b].indexOf(a)&&this.edges[b].push(a),this.numberOfEdges++},b.prototype.pathFromTo=function(a,b){if(!~this.vertices.indexOf(a))return console.log("Vertex not found");var d=[];d.push(a);var e=[];e[a]=!0;for(var f=[];d.length;)for(var g=d.shift(),h=0;h<this.edges[g].length;h++)e[this.edges[g][h]]||(e[this.edges[g][h]]=!0,d.push(this.edges[g][h]),f[this.edges[g][h]]=g);if(!e[b])return void 0;for(var i=[],j=b;j!=a;j=f[j])i.push([c.filter(this.data[f[j]],{arrival:j})]);return i.reverse()},b.prototype.trackVisited=function(a){var b=c.findIndex(e,{arrival:a.departure}),d=c.findIndex(e,{arrival:a.arrival});return e.length>0&&(a.arrival==e[0].departure||a.arrival==e[0].arrival)?!0:f.length>0&&f.indexOf(a.arrival)>-1?!0:-1==d?!1:b>d?!0:!1},b.prototype.getAllPaths=function(a,b,g){var h=this,i=[];return this.data[a].forEach(function(a){a.arrival===b?(e.push(a),i=[],angular.copy(e,i),d.push({paths:i,calculations:l(i)}),e.pop()):h.trackVisited(a)||(e.push(a),h.getAllPaths(a.arrival,b,g),e.pop(),-1===c.findIndex(c.filter(g,{departure:a.arrival}),{arrival:b})&&f.push(a.arrival))}),d};var i=function(a,c,e,i,j,o){g.departure=i,g.arrival=j,g.isDiscountedPrice=o;var p=new b,q=[],r=0,s=0,t=0,u=0;for(c.forEach(function(b,c){p.addVertex(b,k(a,b))}),a.forEach(function(a,b){a.arrival&&p.addEdge(a.departure,a.arrival)}),d=[],f=[],q=p.pathFromTo(i,j),p.getAllPaths(i,j,a),r=q.length,h={cheapest:{paths:[]},fastest:{paths:[]},allTrips:{paths:[]}},t=0;r>t;t+=1)for(s=q[t].length,u=0;s>u;u+=1)h.cheapest.paths.push(m(q[t][u],o)),h.fastest.paths.push(n(q[t][u]));return h.cheapest.calculations=l(h.cheapest.paths),h.fastest.calculations=l(h.fastest.paths),h.allTrips=d,h.totalPossiblePath=d.length,h},j=function(a){return a.sort(function(a,b){return b>a?-1:a>b?1:0})},k=function(a,b){return c.filter(a,{departure:b})},l=function(a){var b=0,c=0,d=0;return a.forEach(function(a,e){b+=Number(a.duration.h),c+=Number(a.duration.m),d+=a.cost}),{totalCost:d,totalDuration:{h:b+Math.floor(c/60),m:c%60}}},m=function(a,b){var d=c.min(a,function(a){return a.discount&&b?a.cost-a.cost*a.discount/100:a.cost});return d&&b&&(d.cost=d.cost-d.cost*d.discount/100),d},n=function(a){var b=c.min(c.pluck(a,"duration"),function(a){return a.h}),d=a.filter(function(a,c){return b.h===a.duration.h?a:void 0});return c.min(d,function(a){return a.duration.m&&a.cost-(a.cost-a.discount)/100})},o=function(a,b,c){return g.departure===a&&g.arrival===b&&h.allTrips.length>0&&g.isDiscountedPrice===c?!0:!1},p=function(){return h};return{sortArray:j,getMatchedDepartures:k,calculateTotalTimeAndCost:l,getCheapestTravel:m,getFastestTravel:n,createGraphAndGetDeals:i,isACachedSearch:o,returnCachedSearch:p}}]),angular.module("travelFinderApp").run(["$templateCache",function(a){a.put("views/main.html",'<md-content class="md-padding" layout-xs="column" layout="row"> <div flex-xs flex-gt-xs="100" layout="column" flex-xs="100"> <div class="md-padding"> <h5 class="md-title">Trip Sorter</h5> <h5 class="md-subhead"> select a <i>Departure city</i> and <i>Arrival city</i> to plan your journey ! <br> Make use of quick filters to find <b>best</b> options </h5> </div> <md-card class="md-whiteframe-3dp"> <md-card-title> <div layout="column" layout-align="start" flex flex-xs="100"> <div layout="row" layout-align="start" flex class="md-padding"> <md-input-container flex="45" flex-xs="50"> <label class="font-light-color"> Departure City </label> <md-select name="favoriteColor" ng-model="data.selectedDeparture"> <md-optgroup label="Departure City"> <md-option ng-repeat="departureCity in data.departureCities" ng-value="departureCity"> {{departureCity}} </md-option> </md-optgroup> </md-select> </md-input-container> <div hide-xs flex="10" class="text-align-center"> <md-button class="md-fab md-button md-ink-ripple hidden-xs" ng-click="userEvents.swapAndSearch()"> <-> </-></md-button> </div> <md-input-container flex="45" flex-xs="50"> <label class="font-light-color"> Arrival City </label> <md-select name="favoriteColor" ng-model="data.selectedArrival"> <md-optgroup label="Arrival City"> <md-option ng-repeat="arrivalCity in data.arrivalCities" ng-value="arrivalCity"> {{arrivalCity}} </md-option> </md-optgroup> </md-select> </md-input-container> </div> <div layout="column" layout-align="center center " class="md-padding"> <div flex="100"> <md-radio-group ng-model="data.sortBy" layout="row" ng-click="userEvents.searchDeals()"> <md-radio-button value="1" class="md-primary" ng-style="{\'display\':\'inline\'}">Cheapest</md-radio-button> <md-radio-button value="2" ng-style="{\'display\':\'inline\'}"> Fastest </md-radio-button> <md-radio-button value="3" ng-style="{\'display\':\'inline\'}">All <span ng-if="data.recommendedResults.totalPossiblePath">({{data.recommendedResults.totalPossiblePath}})</span></md-radio-button> </md-radio-group> </div> <div flex="100" class="md-padding"> <md-button class="md-raised md-primary search-button" ng-click="userEvents.searchDeals()">search</md-button> <md-button ng-show="data.recommendedResults.deals" class="md-raised md-default fr" ng-click="userEvents.resetSearch(true)">Reset</md-button> </div> </div> </div> </md-card-title> </md-card> <md-card class="md-whiteframe-1dp md-padding" ng-show="data.recommendedResults.deals"> <md-content> <div flex="100" flex-xs="100"> <md-switch layout-align="center" ng-model="data.considerDiscount" aria-label="Consider Discounts" flex="100" ng-if="data.sortBy===\'1\'" ng-click="userEvents.searchDeals()"> Consider Discounted Cost </md-switch> </div> <md-list> <div ng-if="data.sortBy!==\'3\'"> <md-list-item class="md-2-line" ng-repeat="deal in data.recommendedResults.deals.paths" layout="row" layout-align="center center" flex="100" flex-xs="100"> <div class="md-list-item-text"> <h3> <div class="fl">{{deal.departure}} > {{deal.arrival}}</div> <div class="fr"><b> <span> {{ deal.cost }}</span></b> {{data.recommendedResults.currency}} </div></h3> <h4> <span class="light-text-color">{{deal.transport}}</span> {{deal.paths.reference}} <span class="light-text-color"> for {{deal.duration.h}}h {{deal.duration.m}} </span></h4> </div> </md-list-item> <md-list-item class="md-2-line" ng-if="data.sortBy!==\'3\'" layout="row" layout-align="start" flex="100" flex-xs="100"> <div class="md-list-item-text"> <table class="table"> <tbody> <tr> <td colspan="2">Total</td> <td colspan="2" class="text-align-center">{{data.recommendedResults.deals.calculations.totalDuration.h}} h {{data.recommendedResults.deals.calculations.totalDuration.m}} </td> <td colspan="2" class="fr">{{data.recommendedResults.deals.calculations.totalCost}} {{data.recommendedResults.currency}}</td> </tr> </tbody> </table> </div> </md-list-item> </div> <div ng-if="data.sortBy===\'3\'"> <v-accordion class="vAccordion--default" multiple> <section layout="row" layout-sm="column" layout-align="center center" layout-wrap> <md-button class="md-raised md-primary" ng-click="$accordion.expandAll()">Expand All Paths</md-button> <md-button class="md-raised" ng-click="$accordion.collapseAll()">Collapse all paths</md-button> </section> <!-- add expanded attribute to open the section --> <v-pane ng-repeat="deal in data.recommendedResults.deals"> <v-pane-header> {{"Path-" + ($index+1)}} involving {{deal.paths.length}} cities </v-pane-header> <v-pane-content> <h5 class="md-title">Cost : <b>{{deal.calculations.totalCost}} </b> {{data.recommendedResults.currency}} Time: <b>{{deal.calculations.totalDuration.h}} h {{deal.calculations.totalDuration.h}} m</b></h5> <div class="md-1-line all-paths" ng-repeat="path in deal.paths" layout="row" layout-wrap> <div class="md-item-text md-whiteframe-z1 all-paths" flex> <table> <tbody> <tr> <td>From : <span class="color-red">{{path.departure}}</span> </td> <td>To : <span class="color-green">{{path.arrival}}</span> </td> </tr> <tr> <td>Cost:<b>{{path.cost}} {{data.recommendedResults.currency}}</b> </td> <td>available discount :(<b>{{path.discount}} % )</b> </td> </tr> <tr> <td> <span class="light-text-color">{{path.transport}}</span> {{path.reference}} <span class="light-text-color"> for {{path.duration.h}}h {{deal.path.m}}m </span> </td> </tr> </tbody> </table> </div> </div> </v-pane-content> </v-pane> </v-accordion> </div> </md-list> </md-content> </md-card> </div> </md-content>')}]);